// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Built Tools > Parse and generate: json 1`] = `
"{
  "simple": {
    "message": "example"
  },
  "sub": {
    "message": "Hello $1"
  },
  "nested_example": {
    "message": "This is nested"
  },
  "nested_array_0": {
    "message": "One"
  },
  "nested_array_1": {
    "message": "Two"
  },
  "nested_chrome1": {
    "message": "test 1"
  },
  "nested_chrome2": {
    "message": "test 2",
    "description": "test"
  },
  "nested_chrome3": {
    "message": "Hello $NAME$, please visit $URL$",
    "description": "Label and link to a URL",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      },
      "name": {
        "content": "$1",
        "example": "Aaron"
      }
    }
  },
  "nested_chrome4": {
    "message": "Visit: $URL$",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      }
    }
  },
  "plural0": {
    "message": "Zero items | One item | $1 items"
  },
  "plural1": {
    "message": "One item | $1 items"
  },
  "pluralN": {
    "message": "$1 items"
  },
  "pluralSub": {
    "message": "Hello $2, I have one problem | Hello $2, I have $1 problems"
  }
}"
`;

exports[`Built Tools > Parse and generate: json 2`] = `
"interface TestI18n {
  /**
   * "example"
   */
  t(key: "simple", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $1"
   */
  t(key: "sub", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "This is nested"
   */
  t(key: "nested_example", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "One"
   */
  t(key: "nested_array_0", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Two"
   */
  t(key: "nested_array_1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 1"
   */
  t(key: "nested_chrome1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 2"
   */
  t(key: "nested_chrome2", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $NAME$, please visit $URL$"
   */
  t(key: "nested_chrome3", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Visit: $URL$"
   */
  t(key: "nested_chrome4", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "0": "Zero items"
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural0", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural1", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "n": "$1 items"
   */
  t(key: "pluralN", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "Hello $2, I have one problem"
   * "n": "Hello $2, I have $1 problems"
   */
  t(key: "pluralSub", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
}
"
`;

exports[`Built Tools > Parse and generate: json5 1`] = `
"{
  "simple": {
    "message": "example"
  },
  "sub": {
    "message": "Hello $1"
  },
  "nested_example": {
    "message": "This is nested"
  },
  "nested_array_0": {
    "message": "One"
  },
  "nested_array_1": {
    "message": "Two"
  },
  "nested_chrome1": {
    "message": "test 1"
  },
  "nested_chrome2": {
    "message": "test 2",
    "description": "test"
  },
  "nested_chrome3": {
    "message": "Hello $NAME$, please visit $URL$",
    "description": "Label and link to a URL",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      },
      "name": {
        "content": "$1",
        "example": "Aaron"
      }
    }
  },
  "nested_chrome4": {
    "message": "Visit: $URL$",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      }
    }
  },
  "plural0": {
    "message": "Zero items | One item | $1 items"
  },
  "plural1": {
    "message": "One item | $1 items"
  },
  "pluralN": {
    "message": "$1 items"
  },
  "pluralSub": {
    "message": "Hello $2, I have one problem | Hello $2, I have $1 problems"
  }
}"
`;

exports[`Built Tools > Parse and generate: json5 2`] = `
"interface TestI18n {
  /**
   * "example"
   */
  t(key: "simple", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $1"
   */
  t(key: "sub", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "This is nested"
   */
  t(key: "nested_example", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "One"
   */
  t(key: "nested_array_0", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Two"
   */
  t(key: "nested_array_1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 1"
   */
  t(key: "nested_chrome1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 2"
   */
  t(key: "nested_chrome2", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $NAME$, please visit $URL$"
   */
  t(key: "nested_chrome3", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Visit: $URL$"
   */
  t(key: "nested_chrome4", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "0": "Zero items"
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural0", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural1", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "n": "$1 items"
   */
  t(key: "pluralN", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "Hello $2, I have one problem"
   * "n": "Hello $2, I have $1 problems"
   */
  t(key: "pluralSub", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
}
"
`;

exports[`Built Tools > Parse and generate: jsonc 1`] = `
"{
  "simple": {
    "message": "example"
  },
  "sub": {
    "message": "Hello $1"
  },
  "nested_example": {
    "message": "This is nested"
  },
  "nested_array_0": {
    "message": "One"
  },
  "nested_array_1": {
    "message": "Two"
  },
  "nested_chrome1": {
    "message": "test 1"
  },
  "nested_chrome2": {
    "message": "test 2",
    "description": "test"
  },
  "nested_chrome3": {
    "message": "Hello $NAME$, please visit $URL$",
    "description": "Label and link to a URL",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      },
      "name": {
        "content": "$1",
        "example": "Aaron"
      }
    }
  },
  "nested_chrome4": {
    "message": "Visit: $URL$",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      }
    }
  },
  "plural0": {
    "message": "Zero items | One item | $1 items"
  },
  "plural1": {
    "message": "One item | $1 items"
  },
  "pluralN": {
    "message": "$1 items"
  },
  "pluralSub": {
    "message": "Hello $2, I have one problem | Hello $2, I have $1 problems"
  }
}"
`;

exports[`Built Tools > Parse and generate: jsonc 2`] = `
"interface TestI18n {
  /**
   * "example"
   */
  t(key: "simple", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $1"
   */
  t(key: "sub", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "This is nested"
   */
  t(key: "nested_example", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "One"
   */
  t(key: "nested_array_0", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Two"
   */
  t(key: "nested_array_1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 1"
   */
  t(key: "nested_chrome1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 2"
   */
  t(key: "nested_chrome2", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $NAME$, please visit $URL$"
   */
  t(key: "nested_chrome3", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Visit: $URL$"
   */
  t(key: "nested_chrome4", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "0": "Zero items"
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural0", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural1", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "n": "$1 items"
   */
  t(key: "pluralN", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "Hello $2, I have one problem"
   * "n": "Hello $2, I have $1 problems"
   */
  t(key: "pluralSub", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
}
"
`;

exports[`Built Tools > Parse and generate: toml 1`] = `
"{
  "simple": {
    "message": "example"
  },
  "sub": {
    "message": "Hello $1"
  },
  "nested_example": {
    "message": "This is nested"
  },
  "nested_array_0": {
    "message": "One"
  },
  "nested_array_1": {
    "message": "Two"
  },
  "nested_chrome1": {
    "message": "test 1"
  },
  "nested_chrome2": {
    "message": "test 2",
    "description": "test"
  },
  "nested_chrome3": {
    "message": "Hello $NAME$, please visit $URL$",
    "description": "Label and link to a URL",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      },
      "name": {
        "content": "$1",
        "example": "Aaron"
      }
    }
  },
  "nested_chrome4": {
    "message": "Visit: $URL$",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      }
    }
  },
  "plural0": {
    "message": "Zero items | One item | $1 items"
  },
  "plural1": {
    "message": "One item | $1 items"
  },
  "pluralN": {
    "message": "$1 items"
  },
  "pluralSub": {
    "message": "Hello $2, I have one problem | Hello $2, I have $1 problems"
  }
}"
`;

exports[`Built Tools > Parse and generate: toml 2`] = `
"interface TestI18n {
  /**
   * "example"
   */
  t(key: "simple", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $1"
   */
  t(key: "sub", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "This is nested"
   */
  t(key: "nested_example", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "One"
   */
  t(key: "nested_array_0", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Two"
   */
  t(key: "nested_array_1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 1"
   */
  t(key: "nested_chrome1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 2"
   */
  t(key: "nested_chrome2", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $NAME$, please visit $URL$"
   */
  t(key: "nested_chrome3", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Visit: $URL$"
   */
  t(key: "nested_chrome4", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "0": "Zero items"
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural0", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural1", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "n": "$1 items"
   */
  t(key: "pluralN", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "Hello $2, I have one problem"
   * "n": "Hello $2, I have $1 problems"
   */
  t(key: "pluralSub", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
}
"
`;

exports[`Built Tools > Parse and generate: yaml 1`] = `
"{
  "simple": {
    "message": "example"
  },
  "sub": {
    "message": "Hello $1"
  },
  "nested_example": {
    "message": "This is nested"
  },
  "nested_array_0": {
    "message": "One"
  },
  "nested_array_1": {
    "message": "Two"
  },
  "nested_chrome1": {
    "message": "test 1"
  },
  "nested_chrome2": {
    "message": "test 2",
    "description": "test"
  },
  "nested_chrome3": {
    "message": "Hello $NAME$, please visit $URL$",
    "description": "Label and link to a URL",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      },
      "name": {
        "content": "$1",
        "example": "Aaron"
      }
    }
  },
  "nested_chrome4": {
    "message": "Visit: $URL$",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      }
    }
  },
  "plural0": {
    "message": "Zero items | One item | $1 items"
  },
  "plural1": {
    "message": "One item | $1 items"
  },
  "pluralN": {
    "message": "$1 items"
  },
  "pluralSub": {
    "message": "Hello $2, I have one problem | Hello $2, I have $1 problems"
  }
}"
`;

exports[`Built Tools > Parse and generate: yaml 2`] = `
"interface TestI18n {
  /**
   * "example"
   */
  t(key: "simple", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $1"
   */
  t(key: "sub", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "This is nested"
   */
  t(key: "nested_example", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "One"
   */
  t(key: "nested_array_0", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Two"
   */
  t(key: "nested_array_1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 1"
   */
  t(key: "nested_chrome1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 2"
   */
  t(key: "nested_chrome2", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $NAME$, please visit $URL$"
   */
  t(key: "nested_chrome3", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Visit: $URL$"
   */
  t(key: "nested_chrome4", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "0": "Zero items"
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural0", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural1", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "n": "$1 items"
   */
  t(key: "pluralN", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "Hello $2, I have one problem"
   * "n": "Hello $2, I have $1 problems"
   */
  t(key: "pluralSub", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
}
"
`;

exports[`Built Tools > Parse and generate: yml 1`] = `
"{
  "simple": {
    "message": "example"
  },
  "sub": {
    "message": "Hello $1"
  },
  "nested_example": {
    "message": "This is nested"
  },
  "nested_array_0": {
    "message": "One"
  },
  "nested_array_1": {
    "message": "Two"
  },
  "nested_chrome1": {
    "message": "test 1"
  },
  "nested_chrome2": {
    "message": "test 2",
    "description": "test"
  },
  "nested_chrome3": {
    "message": "Hello $NAME$, please visit $URL$",
    "description": "Label and link to a URL",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      },
      "name": {
        "content": "$1",
        "example": "Aaron"
      }
    }
  },
  "nested_chrome4": {
    "message": "Visit: $URL$",
    "placeholders": {
      "url": {
        "content": "https://wxt.dev"
      }
    }
  },
  "plural0": {
    "message": "Zero items | One item | $1 items"
  },
  "plural1": {
    "message": "One item | $1 items"
  },
  "pluralN": {
    "message": "$1 items"
  },
  "pluralSub": {
    "message": "Hello $2, I have one problem | Hello $2, I have $1 problems"
  }
}"
`;

exports[`Built Tools > Parse and generate: yml 2`] = `
"interface TestI18n {
  /**
   * "example"
   */
  t(key: "simple", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $1"
   */
  t(key: "sub", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "This is nested"
   */
  t(key: "nested_example", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "One"
   */
  t(key: "nested_array_0", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Two"
   */
  t(key: "nested_array_1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 1"
   */
  t(key: "nested_chrome1", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "test 2"
   */
  t(key: "nested_chrome2", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Hello $NAME$, please visit $URL$"
   */
  t(key: "nested_chrome3", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "Visit: $URL$"
   */
  t(key: "nested_chrome4", sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "0": "Zero items"
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural0", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "One item"
   * "n": "$1 items"
   */
  t(key: "plural1", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "n": "$1 items"
   */
  t(key: "pluralN", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
  /**
   * "1": "Hello $2, I have one problem"
   * "n": "Hello $2, I have $1 problems"
   */
  t(key: "pluralSub", count: number, sub?: import("@wxt-dev/i18n").Substitution[]): string
}
"
`;
